#!/usr/bin/env python

import roslib
# roslib.load_manifest('exercise6')
import rospy

from std_msgs.msg import Int8, Float32MultiArray
from openservorobot.msg import MoveJoint, ManipulatorStateM, ManipulatorDescriptionM, JointStateM, JointDescriptionM



class RobotArm:
    def __init__(self):
        rospy.init_node('robot_arm')

        # A publisher for setting different joint angles of the robot arm
        self.pub_joint = rospy.Publisher(
            "openservorobot/move_joint_to", MoveJoint, queue_size=1000)

        # A subscriber for the current state of the robot
        self.sub_state = rospy.Subscriber(
            "openservorobot/manipulator_state", ManipulatorStateM, self.state_callback)

        self.set_manipulator_sub = rospy.Subscriber(
            "set_manipulator", Float32MultiArray, self.data_callback
        )

    def data_callback(self, arr):
        print("Got data: ", arr.data)
        positions = arr.data
        for n in range(len(positions)):
            self.move_joint(n, positions[n], 1)


    def move_joint(self, joint_id, angle, speed):
        """ joint_id is a number from 0 to 5
                angle is the angle expressed in radians
                speed is the wanted movement speed"""
        msg = MoveJoint()
        msg.joint = joint_id
        msg.position = angle
        msg.speed = speed

        self.pub_joint.publish(msg)


    def state_callback(self, data):
        pass
        """
        for n, joint in enumerate(data.joints):
            print("Joint", n, "is in position", joint.position, ", goal is", joint.goal)
        """




if __name__ == "__main__":
    arm_mover = RobotArm()
    r = rospy.Rate(1)

    while not rospy.is_shutdown():
        r.sleep()
